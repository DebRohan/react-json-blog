{"ast":null,"code":"import React__default, { isValidElement, useRef, useLayoutEffect, useEffect, useReducer, useState, cloneElement, createElement } from 'react';\nimport cx from 'clsx';\nimport { render } from 'react-dom';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isStr(v) {\n  return typeof v === 'string';\n}\n\nfunction isFn(v) {\n  return typeof v === 'function';\n}\n\nfunction parseClassName(v) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nfunction isToastIdValid(toastId) {\n  return toastId === 0 || toastId;\n}\n\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\n\nvar canUseDom = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\n\nvar POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nvar TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n/**\r\n * Used to collapse toast after exit animation\r\n */\n\nfunction collapseToast(node, done, duration\n/* COLLAPSE_DURATION */\n) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n\n  var scrollHeight = node.scrollHeight,\n      style = node.style;\n  requestAnimationFrame(function () {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(function () {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration);\n    });\n  });\n}\n/**\r\n * Css animation that just work.\r\n * You could use animate.css for instance\r\n *\r\n *\r\n * ```\r\n * cssTransition({\r\n *   enter: \"animate__animated animate__bounceIn\",\r\n *   exit: \"animate__animated animate__bounceOut\"\r\n * })\r\n * ```\r\n *\r\n */\n\n\nfunction cssTransition(_ref) {\n  var enter = _ref.enter,\n      exit = _ref.exit,\n      _ref$appendPosition = _ref.appendPosition,\n      appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition,\n      _ref$collapse = _ref.collapse,\n      collapse = _ref$collapse === void 0 ? true : _ref$collapse,\n      _ref$collapseDuration = _ref.collapseDuration,\n      collapseDuration = _ref$collapseDuration === void 0 ? 300 : _ref$collapseDuration;\n  return function ToastTransition(_ref2) {\n    var children = _ref2.children,\n        position = _ref2.position,\n        preventExitTransition = _ref2.preventExitTransition,\n        done = _ref2.done,\n        nodeRef = _ref2.nodeRef,\n        isIn = _ref2.isIn;\n    var enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    var exitClassName = appendPosition ? exit + \"--\" + position : exit;\n    var baseClassName = useRef();\n    var animationStep = useRef(0\n    /* Enter */\n    );\n    useLayoutEffect(function () {\n      onEnter();\n    }, []);\n    useEffect(function () {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      var node = nodeRef.current;\n      baseClassName.current = node.className;\n      node.className += \" \" + enterClassName;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered(e) {\n      if (e.target !== nodeRef.current) return;\n      var node = nodeRef.current;\n      node.dispatchEvent(new Event(\"d\"\n      /* ENTRANCE_ANIMATION_END */\n      ));\n      node.removeEventListener('animationend', onEntered);\n\n      if (animationStep.current === 0\n      /* Enter */\n      ) {\n        node.className = baseClassName.current;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = 1\n      /* Exit */\n      ;\n      var node = nodeRef.current;\n      node.className += \" \" + exitClassName;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      var node = nodeRef.current;\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return React__default.createElement(React__default.Fragment, null, children);\n  };\n}\n\nvar eventManager = {\n  list: /*#__PURE__*/new Map(),\n  emitQueue: /*#__PURE__*/new Map(),\n  on: function on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off: function off(event, callback) {\n    if (callback) {\n      var cb = this.list.get(event).filter(function (cb) {\n        return cb !== callback;\n      });\n      this.list.set(event, cb);\n      return this;\n    }\n\n    this.list[\"delete\"](event);\n    return this;\n  },\n  cancelEmit: function cancelEmit(event) {\n    var timers = this.emitQueue.get(event);\n\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue[\"delete\"](event);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit: function emit(event) {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this.list.has(event) && this.list.get(event).forEach(function (callback) {\n      var timer = setTimeout(function () {\n        // @ts-ignore\n        callback.apply(void 0, args);\n      }, 0);\n      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);\n\n      _this.emitQueue.get(event).push(timer);\n    });\n  }\n};\nvar _excluded = [\"delay\", \"staleId\"];\n\nfunction useToastContainer(props) {\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useState = useState([]),\n      toastIds = _useState[0],\n      setToastIds = _useState[1];\n\n  var containerRef = useRef(null);\n  var toastToRender = useRef(new Map()).current;\n\n  var isToastActive = function isToastActive(id) {\n    return toastIds.indexOf(id) !== -1;\n  };\n\n  var instance = useRef({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props: props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: function getToast(id) {\n      return toastToRender.get(id);\n    }\n  }).current;\n  useEffect(function () {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* WillUnmount */\n    ).on(0\n    /* Show */\n    , buildToast).on(1\n    /* Clear */\n    , function (toastId) {\n      return containerRef.current && removeToast(toastId);\n    }).on(5\n    /* ClearWaitingQueue */\n    , clearWaitingQueue).emit(2\n    /* DidMount */\n    , instance);\n    return function () {\n      return eventManager.emit(3\n      /* WillUnmount */\n      , instance);\n    };\n  }, []);\n  useEffect(function () {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n    eventManager.emit(4\n    /* Change */\n    , toastIds.length, props.containerId);\n  }, [toastIds]);\n  useEffect(function () {\n    instance.props = props;\n  });\n\n  function clearWaitingQueue(_ref) {\n    var containerId = _ref.containerId;\n    var limit = instance.props.limit;\n\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId) {\n    setToastIds(function (state) {\n      return isToastIdValid(toastId) ? state.filter(function (id) {\n        return id !== toastId;\n      }) : [];\n    });\n  }\n\n  function dequeueToast() {\n    var _instance$queue$shift = instance.queue.shift(),\n        toastContent = _instance$queue$shift.toastContent,\n        toastProps = _instance$queue$shift.toastProps,\n        staleId = _instance$queue$shift.staleId;\n\n    appendToast(toastContent, toastProps, staleId);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n\n  function isNotValid(options) {\n    return !containerRef.current || instance.props.enableMultiContainer && options.containerId !== instance.props.containerId || toastToRender.has(options.toastId) && options.updateId == null;\n  } // this function and all the function called inside needs to rely on refs\n\n\n  function buildToast(content, _ref2) {\n    var delay = _ref2.delay,\n        staleId = _ref2.staleId,\n        options = _objectWithoutPropertiesLoose(_ref2, _excluded);\n\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    var toastId = options.toastId,\n        updateId = options.updateId,\n        data = options.data;\n    var props = instance.props;\n\n    var closeToast = function closeToast() {\n      return removeToast(toastId);\n    };\n\n    var isNotAnUpdate = updateId == null;\n    if (isNotAnUpdate) instance.count++;\n    var toastProps = {\n      toastId: toastId,\n      updateId: updateId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: options.draggablePercent || props.draggablePercent,\n      draggableDirection: options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading ? false : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast: function deleteToast() {\n        toastToRender[\"delete\"](toastId);\n        var queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId) ? instance.count - 1 : instance.count - instance.displayedToast;\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          var freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (var i = 0; i < toDequeue; i++) {\n              dequeueToast();\n            }\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    var toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast: closeToast,\n        toastProps: toastProps,\n        data: data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast: closeToast,\n        toastProps: toastProps,\n        data: data\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n\n    if (props.limit && props.limit > 0 && instance.count > props.limit && isNotAnUpdate) {\n      instance.queue.push({\n        toastContent: toastContent,\n        toastProps: toastProps,\n        staleId: staleId\n      });\n    } else if (isNum(delay) && delay > 0) {\n      setTimeout(function () {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(content, toastProps, staleId) {\n    var toastId = toastProps.toastId;\n    if (staleId) toastToRender[\"delete\"](staleId);\n    toastToRender.set(toastId, {\n      content: content,\n      props: toastProps\n    });\n    setToastIds(function (state) {\n      return [].concat(state, [toastId]).filter(function (id) {\n        return id !== staleId;\n      });\n    });\n  }\n\n  function getToastToRender(cb) {\n    var toRender = new Map();\n    var collection = Array.from(toastToRender.values());\n    if (props.newestOnTop) collection.reverse();\n    collection.forEach(function (toast) {\n      var position = toast.props.position;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position).push(toast);\n    });\n    return Array.from(toRender, function (p) {\n      return cb(p[0], p[1]);\n    });\n  }\n\n  return {\n    getToastToRender: getToastToRender,\n    containerRef: containerRef,\n    isToastActive: isToastActive\n  };\n}\n\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\n\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\n\nfunction useToast(props) {\n  var _useState = useState(false),\n      isRunning = _useState[0],\n      setIsRunning = _useState[1];\n\n  var _useState2 = useState(false),\n      preventExitTransition = _useState2[0],\n      setPreventExitTransition = _useState2[1];\n\n  var toastRef = useRef(null);\n  var drag = useRef({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  var syncProps = useRef(props);\n  var autoClose = props.autoClose,\n      pauseOnHover = props.pauseOnHover,\n      closeToast = props.closeToast,\n      onClick = props.onClick,\n      closeOnClick = props.closeOnClick;\n  useEffect(function () {\n    syncProps.current = props;\n  });\n  useEffect(function () {\n    if (toastRef.current) toastRef.current.addEventListener(\"d\"\n    /* ENTRANCE_ANIMATION_END */\n    , playToast, {\n      once: true\n    });\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return function () {\n      var props = syncProps.current;\n      if (isFn(props.onClose)) props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n  useEffect(function () {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return function () {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(e) {\n    if (props.draggable) {\n      bindDragEvents();\n      var toast = toastRef.current;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent);\n      drag.y = getY(e.nativeEvent);\n\n      if (props.draggableDirection === \"x\"\n      /* X */\n      ) {\n        drag.start = drag.x;\n        drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance = toast.offsetHeight * (props.draggablePercent === 80\n        /* DRAGGABLE_PERCENT */\n        ? props.draggablePercent * 1.5 : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      var _drag$boundingRect = drag.boundingRect,\n          top = _drag$boundingRect.top,\n          bottom = _drag$boundingRect.bottom,\n          left = _drag$boundingRect.left,\n          right = _drag$boundingRect.right;\n\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e) {\n    var toast = toastRef.current;\n\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.y = getY(e);\n\n      if (props.draggableDirection === \"x\"\n      /* X */\n      ) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      } // prevent false positif during a toast click\n\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(\" + drag.delta + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.delta / drag.removalDistance));\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    var toast = toastRef.current;\n\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(0)\";\n      toast.style.opacity = '1';\n    }\n  }\n\n  var eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n\n  if (closeOnClick) {\n    eventHandlers.onClick = function (e) {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast: playToast,\n    pauseToast: pauseToast,\n    isRunning: isRunning,\n    preventExitTransition: preventExitTransition,\n    toastRef: toastRef,\n    eventHandlers: eventHandlers\n  };\n}\n\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast,\n      theme = _ref.theme,\n      _ref$ariaLabel = _ref.ariaLabel,\n      ariaLabel = _ref$ariaLabel === void 0 ? 'close' : _ref$ariaLabel;\n  return createElement(\"button\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button \" + \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button--\" + theme,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\n\nfunction ProgressBar(_ref) {\n  var _cx, _animationEvent;\n\n  var delay = _ref.delay,\n      isRunning = _ref.isRunning,\n      closeToast = _ref.closeToast,\n      type = _ref.type,\n      hide = _ref.hide,\n      className = _ref.className,\n      userStyle = _ref.style,\n      controlledProgress = _ref.controlledProgress,\n      progress = _ref.progress,\n      rtl = _ref.rtl,\n      isIn = _ref.isIn,\n      theme = _ref.theme;\n\n  var style = _extends({}, userStyle, {\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  });\n\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  var defaultClassName = cx(\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--controlled\" : \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--animated\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar-theme--\" + theme, \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--rtl\"] = rtl, _cx));\n  var classNames = isFn(className) ? className({\n    rtl: rtl,\n    type: type,\n    defaultClassName: defaultClassName\n  }) : cx(defaultClassName, className); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  var animationEvent = (_animationEvent = {}, _animationEvent[controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd'] = controlledProgress && progress < 1 ? null : function () {\n    isIn && closeToast();\n  }, _animationEvent); // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return createElement(\"div\", Object.assign({\n    role: \"progressbar\",\n    \"aria-hidden\": hide ? 'true' : 'false',\n    \"aria-label\": \"notification timer\",\n    className: classNames,\n    style: style\n  }, animationEvent));\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\nvar _excluded$1 = [\"theme\", \"type\"];\n\nvar Svg = function Svg(_ref) {\n  var theme = _ref.theme,\n      type = _ref.type,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  return createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    height: \"100%\",\n    fill: theme === 'colored' ? 'currentColor' : \"var(--toastify-icon-color-\" + type + \")\"\n  }, rest));\n};\n\nfunction Warning(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"\n  }));\n}\n\nfunction Info(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"\n  }));\n}\n\nfunction Success(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"\n  }));\n}\n\nfunction Error(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"\n  }));\n}\n\nfunction Spinner() {\n  return createElement(\"div\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__spinner\"\n  });\n}\n\nvar Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nvar Toast = function Toast(props) {\n  var _cx, _cx2;\n\n  var _useToast = useToast(props),\n      isRunning = _useToast.isRunning,\n      preventExitTransition = _useToast.preventExitTransition,\n      toastRef = _useToast.toastRef,\n      eventHandlers = _useToast.eventHandlers;\n\n  var closeButton = props.closeButton,\n      children = props.children,\n      autoClose = props.autoClose,\n      onClick = props.onClick,\n      type = props.type,\n      hideProgressBar = props.hideProgressBar,\n      closeToast = props.closeToast,\n      Transition = props.transition,\n      position = props.position,\n      className = props.className,\n      style = props.style,\n      bodyClassName = props.bodyClassName,\n      bodyStyle = props.bodyStyle,\n      progressClassName = props.progressClassName,\n      progressStyle = props.progressStyle,\n      updateId = props.updateId,\n      role = props.role,\n      progress = props.progress,\n      rtl = props.rtl,\n      toastId = props.toastId,\n      deleteToast = props.deleteToast,\n      isIn = props.isIn,\n      isLoading = props.isLoading,\n      icon = props.icon,\n      theme = props.theme;\n  var defaultClassName = cx(\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast-theme--\" + theme, \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--rtl\"] = rtl, _cx));\n  var cssClasses = isFn(className) ? className({\n    rtl: rtl,\n    position: position,\n    type: type,\n    defaultClassName: defaultClassName\n  }) : cx(defaultClassName, className);\n  var isProgressControlled = !!progress;\n  var maybeIcon = Icons[type];\n  var iconProps = {\n    theme: theme,\n    type: type\n  };\n  var Icon = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  function renderCloseButton(closeButton) {\n    if (!closeButton) return;\n    var props = {\n      closeToast: closeToast,\n      type: type,\n      theme: theme\n    };\n    if (isFn(closeButton)) return closeButton(props);\n    if (isValidElement(closeButton)) return cloneElement(closeButton, props);\n  }\n\n  return createElement(Transition, {\n    isIn: isIn,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, createElement(\"div\", Object.assign({\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses\n  }, eventHandlers, {\n    style: style,\n    ref: toastRef\n  }), createElement(\"div\", Object.assign({}, isIn && {\n    role: role\n  }, {\n    className: isFn(bodyClassName) ? bodyClassName({\n      type: type\n    }) : cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }), Icon && createElement(\"div\", {\n    className: cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-icon\", (_cx2 = {}, _cx2[\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"--animate-icon \" + \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__zoom-enter\"] = !isLoading, _cx2))\n  }, Icon), createElement(\"div\", null, children)), renderCloseButton(closeButton), (autoClose || isProgressControlled) && createElement(ProgressBar, Object.assign({}, updateId && !isProgressControlled ? {\n    key: \"pb-\" + updateId\n  } : {}, {\n    rtl: rtl,\n    theme: theme,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: isIn,\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: isProgressControlled,\n    progress: progress\n  }))));\n};\n\nvar Bounce = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-exit\",\n  appendPosition: true\n});\nvar Slide = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-exit\",\n  appendPosition: true\n});\nvar Zoom = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-exit\"\n});\nvar Flip = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-exit\"\n});\n\nvar ToastContainer = function ToastContainer(props) {\n  var _useToastContainer = useToastContainer(props),\n      getToastToRender = _useToastContainer.getToastToRender,\n      containerRef = _useToastContainer.containerRef,\n      isToastActive = _useToastContainer.isToastActive;\n\n  var className = props.className,\n      style = props.style,\n      rtl = props.rtl,\n      containerId = props.containerId;\n\n  function getClassName(position) {\n    var _cx;\n\n    var defaultClassName = cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-container\", \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-container--\" + position, (_cx = {}, _cx[\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-container--rtl\"] = rtl, _cx));\n    return isFn(className) ? className({\n      position: position,\n      rtl: rtl,\n      defaultClassName: defaultClassName\n    }) : cx(defaultClassName, parseClassName(className));\n  }\n\n  return createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    ,\n    id: containerId\n  }, getToastToRender(function (position, toastList) {\n    var containerStyle = !toastList.length ? _extends({}, style, {\n      pointerEvents: 'none'\n    }) : _extends({}, style);\n    return createElement(\"div\", {\n      className: getClassName(position),\n      style: containerStyle,\n      key: \"container-\" + position\n    }, toastList.map(function (_ref) {\n      var content = _ref.content,\n          toastProps = _ref.props;\n      return createElement(Toast, Object.assign({}, toastProps, {\n        isIn: isToastActive(toastProps.toastId),\n        key: \"toast-\" + toastProps.key,\n        closeButton: toastProps.closeButton === true ? CloseButton : toastProps.closeButton\n      }), content);\n    }));\n  }));\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80\n  /* DRAGGABLE_PERCENT */\n  ,\n  draggableDirection: \"x\"\n  /* X */\n  ,\n  role: 'alert',\n  theme: 'light'\n};\nvar containers = /*#__PURE__*/new Map();\nvar latestInstance;\nvar containerDomNode;\nvar containerConfig;\nvar queue = [];\nvar lazy = false;\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\nfunction getToast(toastId, _ref) {\n  var containerId = _ref.containerId;\n  var container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\n\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\n\nfunction dispatchToast(content, options) {\n  if (containers.size > 0) {\n    eventManager.emit(0\n    /* Show */\n    , content, options);\n  } else {\n    queue.push({\n      content: content,\n      options: options\n    });\n\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(createElement(ToastContainer, Object.assign({}, containerConfig)), containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\n\nfunction mergeOptions(type, options) {\n  return _extends({}, options, {\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  });\n}\n\nfunction createToastByType(type) {\n  return function (content, options) {\n    return dispatchToast(content, mergeOptions(type, options));\n  };\n}\n\nfunction toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, _extends({\n    isLoading: true,\n    autoClose: false,\n    closeOnClick: false,\n    closeButton: false,\n    draggable: false\n  }, options)));\n};\n\nfunction handlePromise(promise, _ref2, options) {\n  var pending = _ref2.pending,\n      error = _ref2.error,\n      success = _ref2.success;\n  var id;\n\n  if (pending) {\n    id = isStr(pending) ? toast.loading(pending, options) : toast.loading(pending.render, _extends({}, options, pending));\n  }\n\n  var resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null\n  };\n\n  var resolver = function resolver(type, input, result) {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    var baseParams = _extends({\n      type: type\n    }, resetParams, options, {\n      data: result\n    });\n\n    var params = isStr(input) ? {\n      render: input\n    } : input; // if the id is set we know that it's an update\n\n    if (id) {\n      toast.update(id, _extends({}, baseParams, params));\n    } else {\n      // using toast.promise without loading\n      toast(params.render, _extends({}, baseParams, params));\n    }\n\n    return result;\n  };\n\n  var p = isFn(promise) ? promise() : promise; //call the resolvers only when needed\n\n  p.then(function (result) {\n    return resolver('success', success, result);\n  })[\"catch\"](function (err) {\n    return resolver('error', error, err);\n  });\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = /*#__PURE__*/createToastByType(TYPE.SUCCESS);\ntoast.info = /*#__PURE__*/createToastByType(TYPE.INFO);\ntoast.error = /*#__PURE__*/createToastByType(TYPE.ERROR);\ntoast.warning = /*#__PURE__*/createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\n\ntoast.dark = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, _extends({\n    theme: 'dark'\n  }, options)));\n};\n/**\r\n * Remove toast programmaticaly\r\n */\n\n\ntoast.dismiss = function (id) {\n  return eventManager.emit(1\n  /* Clear */\n  , id);\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return eventManager.emit(5\n  /* ClearWaitingQueue */\n  , params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\n\ntoast.isActive = function (id) {\n  var isToastActive = false;\n  containers.forEach(function (container) {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\n\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  } // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n\n\n  setTimeout(function () {\n    var toast = getToast(toastId, options);\n\n    if (toast) {\n      var oldOptions = toast.props,\n          oldContent = toast.content;\n\n      var nextOptions = _extends({}, oldOptions, options, {\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      });\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      var content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\n\ntoast.done = function (id) {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Track changes. The callback get the number of toast displayed\r\n *\r\n */\n\n\ntoast.onChange = function (callback) {\n  if (isFn(callback)) {\n    eventManager.on(4\n    /* Change */\n    , callback);\n  }\n\n  return function () {\n    isFn(callback) && eventManager.off(4\n    /* Change */\n    , callback);\n  };\n};\n/**\r\n * Configure the ToastContainer when lazy mounted\r\n * Prefer ToastContainer over this one\r\n */\n\n\ntoast.configure = function (config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* DidMount */\n, function (containerInstance) {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(function (item) {\n    eventManager.emit(0\n    /* Show */\n    , item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* WillUnmount */\n, function (containerInstance) {\n  containers[\"delete\"](containerInstance.containerId || containerInstance);\n\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Show */\n    ).off(1\n    /* Clear */\n    ).off(5\n    /* ClearWaitingQueue */\n    );\n  }\n\n  if (canUseDom && containerDomNode) {\n    document.body.removeChild(containerDomNode);\n  }\n});\nexport { Bounce, Flip, Icons, Slide, ToastContainer, Zoom, collapseToast, cssTransition, toast, useToast, useToastContainer };","map":{"version":3,"mappings":"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","names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","getAutoCloseDelay","toastAutoClose","containerAutoClose","canUseDom","window","document","createElement","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","collapseToast","node","done","duration","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","cssTransition","enter","exit","appendPosition","_ref$appendPosition","_ref$collapse","collapse","_ref$collapseDuration","collapseDuration","ToastTransition","children","position","preventExitTransition","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","useLayoutEffect","onEnter","useEffect","onExited","onExit","current","className","addEventListener","onEntered","e","target","dispatchEvent","Event","removeEventListener","React","eventManager","list","Map","emitQueue","on","event","callback","has","set","get","push","off","cb","filter","cancelEmit","timers","forEach","clearTimeout","emit","_len","args","timer","_this","useToastContainer","props","useReducer","x","forceUpdate","useState","toastIds","setToastIds","containerRef","toastToRender","isToastActive","id","indexOf","instance","toastKey","displayedToast","count","queue","containerId","getToast","buildToast","removeToast","clearWaitingQueue","length","limit","state","dequeueToast","shift","toastContent","toastProps","staleId","appendToast","isNotValid","options","enableMultiContainer","updateId","delay","data","closeToast","isNotAnUpdate","isLoading","theme","icon","key","type","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","queueLen","freeSlot","toDequeue","i","onOpen","onClose","cloneElement","getToastToRender","toRender","collection","Array","from","values","newestOnTop","reverse","toast","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","playToast","once","bindFocusEvents","unbindFocusEvents","onDragStart","bindDragEvents","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","hasFocus","onDragMove","onDragEnd","unbindDragEvents","transform","opacity","Math","abs","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","_ref$ariaLabel","stopPropagation","viewBox","fillRule","d","ProgressBar","_cx","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","animationEvent","defaultProps","Svg","rest","width","fill","Warning","Info","Success","Error","Spinner","Icons","info","warning","success","error","spinner","Toast","Transition","cssClasses","isProgressControlled","maybeIcon","iconProps","Icon","renderCloseButton","ref","Bounce","Slide","Zoom","Flip","ToastContainer","getClassName","toastList","containerStyle","pointerEvents","map","containers","latestInstance","containerDomNode","containerConfig","lazy","container","generateToastId","random","toString","substring","getToastId","dispatchToast","size","body","appendChild","render","mergeOptions","createToastByType","loading","handlePromise","promise","pending","resetParams","resolver","input","result","dismiss","baseParams","params","update","then","err","warn","dark","isActive","oldOptions","oldContent","nextOptions","onChange","configure","config","containerInstance","item","removeChild"],"sources":["/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/utils/propValidator.ts","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/utils/constant.ts","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/utils/collapseToast.ts","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/utils/cssTransition.tsx","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/core/eventManager.ts","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/hooks/useToastContainer.ts","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/hooks/useToast.ts","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/components/CloseButton.tsx","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/components/ProgressBar.tsx","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/components/Icons.tsx","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/components/Toast.tsx","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/components/Transitions.tsx","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/components/ToastContainer.tsx","/Users/debarishidevnath/blog react app/react-json-blog/node_modules/react-toastify/src/core/toast.tsx"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\n\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n    eventManager.emit(Event.Change, toastIds.length, props.containerId);\n  }, [toastIds]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const {\n      toastContent,\n      toastProps,\n      staleId\n    } = instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        toastToRender.delete(toastId);\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    toastToRender.set(toastId, {\n      content,\n      props: toastProps\n    });\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { Icons } from './Icons';\nimport { ToastProps } from '../types';\nimport { Default, isFn, isStr } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n  const maybeIcon = Icons[type as keyof typeof Icons];\n  const iconProps = { theme, type };\n  let Icon: React.ReactNode = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (React.isValidElement(icon)) {\n    Icon = React.cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]: !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties = !toastList.length\n          ? { ...style, pointerEvents: 'none' }\n          : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams {\n  pending?: string | UpdateOptions;\n  success?: string | UpdateOptions;\n  error?: string | UpdateOptions;\n}\n\nfunction handlePromise<T>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n * Prefer ToastContainer over this one\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n"]},"metadata":{},"sourceType":"module"}