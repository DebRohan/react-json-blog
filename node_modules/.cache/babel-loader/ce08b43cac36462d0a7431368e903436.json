{"ast":null,"code":"var _jsxFileName = \"/Users/debarishidevnath/blog react app/react-json-blog/src/pages/AddEditBlog.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState} from \"react\";\n// // import { MDBContainer, MDBTypography } from \"mdb-react-ui-kit\";\n// import {MDBValidation, MDBInput, MDBBtn} from \"mdb-react-ui-kit\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import axios from 'axios';\n// import {toast} from \"react-toastify\"\n// import { useEffect } from \"react/cjs/react.development\";\n// //xqvmv0yi\n// const initialState = {\n// likes: \"\",\n// comments: \"\",\n// authorname: \"\",\n// likes: \"\",\n// title: \"\",\n// description: \"\",\n// category: \"\",\n// imageUrl: \"\"\n// }\n// const options = ['Travel', \"Fashion\", \"Fitness\", \"Sports\", \"Food\", \"Tech\"]\n// const AddEditBlog = () => {\n//     const [formValue, setFormValue] = useState(initialState);\n//     const [categoryErrMsg, setCategoryErrMsg] = useState(null);\n//     const {authorname, title, description, likes, comments, category, imageUrl} = formValue; \n//     const [editMode, setEditMode] = useState(false);\n//     const navigate = useNavigate();\n//     const { id } = useParams();\n//   useEffect(() => {\n//     if (id) {\n//       setEditMode(true);\n//       getSingleBlog(id);\n//     } else {\n//       setEditMode(false);\n//       setFormValue({ ...initialState });\n//     }\n//   }, [id]);\n//   const getSingleBlog = async (id) => {\n//     const singleBlog = await axios.get(`http://localhost:5000/blogs/${id}`);\n//     if (singleBlog.status === 200) {\n//       setFormValue({ ...singleBlog.data });\n//     } else {\n//       toast.error(\"Something went wrong\");\n//     }\n//   };\n//     const getDate = () => {\n//         let today = new Date();\n//         let dd = String(today.getDate()).padStart(2, \"0\");\n//         let mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n//         let yyyy = today.getFullYear();\n//         today = mm + \"/\" + dd + \"/\" + yyyy;\n//         return today;\n//       };\n//       const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         if (!category) {\n//           setCategoryErrMsg(\"Please select a category\");\n//         }\n//         const imageValidation = !editMode ? imageUrl : true;\n//         if (authorname && title && description && imageUrl && category && likes && comments) {\n//           const currentDate = getDate();\n//           if(!editMode){\n//             const updatedBlogData = { ...formValue, date: currentDate };\n//             const response = await axios.post(\n//                 \"http://localhost:5000/blogs\",\n//                 updatedBlogData\n//               );\n//               if (response.status === 201) {\n//                 toast.success(\"Blog Created Successfully\");\n//               } else {\n//                 toast.error(\"Something went wrong\");\n//               }\n//           }\n//             else{\n//                 const response = await axios.put(\n//                     `http://localhost:5000/blogs/${id}`,\n//                     formValue\n//                   );\n//                   if (response.status === 200) {\n//                     toast.success(\"Blog Updated Successfully\");\n//                   } else {\n//                     toast.error(\"Something went wrong\");\n//                   }\n//             }\n//           setFormValue({ authorname: \"\", title: \"\", description: \"\", likes: \"\", comments: \"\", category: \"\", imageUrl: \"\" });\n//           navigate(\"/\");\n//         }\n//       };\n//     const onInputChange = (e) => {\n//         let { name, value } = e.target;\n//         setFormValue({ ...formValue, [name]: value });\n//     };\n//     const onUploadImage = (file) => {\n//         const formData = new FormData();\n//         formData.append(\"file\", file);\n//         formData.append(\"upload_preset\", \"xqvmv0yi\");\n//         axios\n//         .post(\"http://api.cloudinary.com/v1_1/ddy1g5aim/image/upload\", formData)\n//         .then((resp) => {\n//           toast.info(\"Image Uploaded Successfully\");\n//           setFormValue({ ...formValue, imageUrl: resp.data.url });\n//         })\n//         .catch((err) => {\n//           toast.error(\"Something went wrong\");\n//         });\n//     };\n//     const onCategoryChange = (e) => {\n//         setCategoryErrMsg(null);\n//         setFormValue({ ...formValue, category: e.target.value });\n//       };\n//   return (\n//     // <div style={{ marginTop: \"100px\" }}>\n//     //   {/* <MDBContainer>\n//     //     <MDBTypography note noteColor=\"primary\">\n//     //       It is blogging website where you will find blog post related to\n//     //       different category like Travel, Food, Sports Fitness, Tech and Fashion\n//     //     </MDBTypography>\n//     //   </MDBContainer> */}\n//     //   <h2>Add Edit</h2>\n//     // </div>\n//     <MDBValidation className= \"row g-3\" style = {{marginTop: '100px'}} noValidate onSubmit={handleSubmit}>\n//          <p className=\"fs-2 fw-bold\">{editMode ? \"Update Blog\" : \"Add Blog\"}</p>\n//         <div\n//         style={{\n//           margin: \"auto\",\n//           padding: \"15px\",\n//           maxWidth: \"400px\",\n//           alignContent: \"center\",\n//         }}\n//       >\n//                   <MDBInput\n//           value={authorname || \"\"}\n//           name=\"authorname\"\n//           type=\"text\"\n//           onChange={onInputChange}\n//           required\n//           label=\"Author Name\"\n//           validation=\"Please provide an Author Name\"\n//           invalid\n//         />\n//         <br/>\n//            <MDBInput\n//           value={title || \"\"}\n//           name=\"title\"\n//           type=\"text\"\n//           onChange={onInputChange}\n//           required\n//           label=\"Title\"\n//           validation=\"Please provide a title\"\n//           invalid\n//         />\n//         <br/>\n//           <MDBInput\n//           value={likes || \"\"}\n//           name=\"likes\"\n//           type=\"text\"\n//           onChange={onInputChange}\n//           required\n//           label=\"Number of Likes\"\n//           validation=\"Please Enter the number of likes\"\n//           invalid\n//         />\n//         <br/>\n//          <MDBInput\n//           value={comments || \"\"}\n//           name=\"comments\"\n//           type=\"text\"\n//           onChange={onInputChange}\n//           required\n//           label=\"Comments\"\n//           validation=\"Please Enter the number of comments recieved\"\n//           invalid\n//         />\n//          <br />\n//          <MDBInput\n//           value={description || \"\"}\n//           name=\"description\"\n//           type=\"text\"\n//           onChange={onInputChange}\n//           required\n//           label=\"Description\"\n//           validation=\"Please provide a description\"\n//           textarea\n//           rows={4}\n//           invalid\n//         />\n//         <br />\n//         {!editMode && (\n//           <>\n//             <MDBInput\n//               type=\"file\"\n//               onChange={(e) => onUploadImage(e.target.files[0])}\n//               required\n//               validation=\"Please provide a title\"\n//               invalid\n//             />\n//             <br />\n//           </>\n//         )}\n//              <select\n//           className=\"categoryDropdown\"\n//           onChange={onCategoryChange}\n//           value={category}\n//         >\n//           <option>Please select category</option>\n//           {options.map((option, index) => (\n//             <option value={option || \"\"} key={index}>\n//               {option}\n//             </option>\n//           ))}\n//         </select>\n//         {categoryErrMsg && (\n//           <div className=\"categoryErrorMsg\">{categoryErrMsg}</div>\n//         )}\n//         <br />\n//         <br />\n//         <MDBBtn type=\"submit\" style={{ marginRight: \"10px\" }}>\n//           {editMode ? \"Update\" : \"Add\"}\n//         </MDBBtn>\n//         <MDBBtn\n//           color=\"danger\"\n//           style={{ marginRight: \"10px\" }}\n//           onClick={() => navigate(\"/\")}\n//         >\n//           Go Back\n//         </MDBBtn>\n//       </div>\n//         </MDBValidation>\n//   );\n// };\n// export default AddEditBlog;\nimport React, { useState } from \"react\";\nimport { MDBValidation, MDBInput, MDBBtn } from \"mdb-react-ui-kit\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useEffect } from \"react/cjs/react.development\"; // jnecgtem\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  title: \"\",\n  description: \"\",\n  category: \"\",\n  imageUrl: \"\"\n};\nconst options = [\"Travel\", \"Fashion\", \"Fitness\", \"Sports\", \"Food\", \"Tech\"];\n\nconst AddEditBlog = () => {\n  _s();\n\n  const [formValue, setFormValue] = useState(initialState);\n  const [categoryErrMsg, setCategoryErrMsg] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const {\n    title,\n    description,\n    category,\n    imageUrl\n  } = formValue;\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      setEditMode(true);\n      getSingleBlog(id);\n    } else {\n      setEditMode(false);\n      setFormValue({ ...initialState\n      });\n    }\n  }, [id]);\n\n  const getSingleBlog = async id => {\n    const singleBlog = await axios.get(`http://localhost:5000/blogs/${id}`);\n\n    if (singleBlog.status === 200) {\n      setFormValue({ ...singleBlog.data\n      });\n    } else {\n      toast.error(\"Something went wrong\");\n    }\n  };\n\n  const getDate = () => {\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, \"0\");\n    let mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n    let yyyy = today.getFullYear();\n    today = mm + \"/\" + dd + \"/\" + yyyy;\n    return today;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!category) {\n      setCategoryErrMsg(\"Please select a category\");\n    }\n\n    const imageValidation = !editMode ? imageUrl : true;\n\n    if (title && description && imageUrl && category) {\n      const currentDate = getDate();\n\n      if (!editMode) {\n        const updatedBlogData = { ...formValue,\n          date: currentDate\n        };\n        const response = await axios.post(\"http://localhost:5000/blogs\", updatedBlogData);\n\n        if (response.status === 201) {\n          toast.success(\"Blog Created Successfully\");\n        } else {\n          toast.error(\"Something went wrong\");\n        }\n      } else {\n        const response = await axios.put(`http://localhost:5000/blogs/${id}`, formValue);\n\n        if (response.status === 200) {\n          toast.success(\"Blog Updated Successfully\");\n        } else {\n          toast.error(\"Something went wrong\");\n        }\n      }\n\n      setFormValue({\n        title: \"\",\n        description: \"\",\n        category: \"\",\n        imageUrl: \"\"\n      });\n      navigate(\"/\");\n    }\n  };\n\n  const onInputChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setFormValue({ ...formValue,\n      [name]: value\n    });\n  };\n\n  const onUploadImage = file => {\n    console.log(\"file\", file);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"upload_preset\", \"jnecgtem\");\n    axios.post(\"http://api.cloudinary.com/v1_1/db9eaq2ct/image/upload\", formData).then(resp => {\n      toast.info(\"Image Uploaded Successfully\");\n      setFormValue({ ...formValue,\n        imageUrl: resp.data.url\n      });\n    }).catch(err => {\n      toast.error(\"Something went wrong\");\n    });\n  };\n\n  const onCategoryChange = e => {\n    setCategoryErrMsg(null);\n    setFormValue({ ...formValue,\n      category: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MDBValidation, {\n    className: \"row g-3\",\n    style: {\n      marginTop: \"100px\"\n    },\n    noValidate: true,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"fs-2 fw-bold\",\n      children: editMode ? \"Update Blog\" : \"Add Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"auto\",\n        padding: \"15px\",\n        maxWidth: \"400px\",\n        alignContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n        value: title || \"\",\n        name: \"title\",\n        type: \"text\",\n        onChange: onInputChange,\n        required: true,\n        label: \"Title\",\n        validation: \"Please provide a title\",\n        invalid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n        value: description || \"\",\n        name: \"description\",\n        type: \"text\",\n        onChange: onInputChange,\n        required: true,\n        label: \"Description\",\n        validation: \"Please provide a description\",\n        textarea: true,\n        rows: 4,\n        invalid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), !editMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n          type: \"file\",\n          onChange: e => onUploadImage(e.target.files[0]),\n          required: true,\n          validation: \"Please provide a title\",\n          invalid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"categoryDropdown\",\n        onChange: onCategoryChange,\n        value: category,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Please select category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option || \"\",\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), categoryErrMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categoryErrorMsg\",\n        children: categoryErrMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n        type: \"submit\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: editMode ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n        color: \"danger\",\n        style: {\n          marginRight: \"10px\"\n        },\n        onClick: () => navigate(\"/\"),\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEditBlog, \"DtvXpw6MLojfmVj3D4jiyptSTcc=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = AddEditBlog;\nexport default AddEditBlog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditBlog\");","map":{"version":3,"sources":["/Users/debarishidevnath/blog react app/react-json-blog/src/pages/AddEditBlog.js"],"names":["React","useState","MDBValidation","MDBInput","MDBBtn","useNavigate","useParams","axios","toast","useEffect","initialState","title","description","category","imageUrl","options","AddEditBlog","formValue","setFormValue","categoryErrMsg","setCategoryErrMsg","editMode","setEditMode","navigate","id","getSingleBlog","singleBlog","get","status","data","error","getDate","today","Date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","handleSubmit","e","preventDefault","imageValidation","currentDate","updatedBlogData","date","response","post","success","put","onInputChange","name","value","target","onUploadImage","file","console","log","formData","FormData","append","then","resp","info","url","catch","err","onCategoryChange","marginTop","margin","padding","maxWidth","alignContent","files","map","option","index","marginRight"],"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","sourcesContent":["// import React, {useState} from \"react\";\n// // import { MDBContainer, MDBTypography } from \"mdb-react-ui-kit\";\n// import {MDBValidation, MDBInput, MDBBtn} from \"mdb-react-ui-kit\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import axios from 'axios';\n// import {toast} from \"react-toastify\"\n// import { useEffect } from \"react/cjs/react.development\";\n\n// //xqvmv0yi\n\n// const initialState = {\n// likes: \"\",\n// comments: \"\",\n// authorname: \"\",\n// likes: \"\",\n// title: \"\",\n// description: \"\",\n// category: \"\",\n// imageUrl: \"\"\n// }\n\n// const options = ['Travel', \"Fashion\", \"Fitness\", \"Sports\", \"Food\", \"Tech\"]\n// const AddEditBlog = () => {\n//     const [formValue, setFormValue] = useState(initialState);\n//     const [categoryErrMsg, setCategoryErrMsg] = useState(null);\n//     const {authorname, title, description, likes, comments, category, imageUrl} = formValue; \n//     const [editMode, setEditMode] = useState(false);\n    \n//     const navigate = useNavigate();\n\n//     const { id } = useParams();\n\n//   useEffect(() => {\n//     if (id) {\n//       setEditMode(true);\n//       getSingleBlog(id);\n//     } else {\n//       setEditMode(false);\n//       setFormValue({ ...initialState });\n//     }\n//   }, [id]);\n\n//   const getSingleBlog = async (id) => {\n//     const singleBlog = await axios.get(`http://localhost:5000/blogs/${id}`);\n//     if (singleBlog.status === 200) {\n//       setFormValue({ ...singleBlog.data });\n//     } else {\n//       toast.error(\"Something went wrong\");\n//     }\n//   };\n    \n//     const getDate = () => {\n//         let today = new Date();\n//         let dd = String(today.getDate()).padStart(2, \"0\");\n//         let mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n//         let yyyy = today.getFullYear();\n    \n//         today = mm + \"/\" + dd + \"/\" + yyyy;\n//         return today;\n//       };\n//       const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         if (!category) {\n//           setCategoryErrMsg(\"Please select a category\");\n//         }\n//         const imageValidation = !editMode ? imageUrl : true;\n//         if (authorname && title && description && imageUrl && category && likes && comments) {\n//           const currentDate = getDate();\n//           if(!editMode){\n//             const updatedBlogData = { ...formValue, date: currentDate };\n//             const response = await axios.post(\n//                 \"http://localhost:5000/blogs\",\n//                 updatedBlogData\n//               );\n//               if (response.status === 201) {\n//                 toast.success(\"Blog Created Successfully\");\n//               } else {\n//                 toast.error(\"Something went wrong\");\n//               }\n             \n//           }\n//             else{\n//                 const response = await axios.put(\n//                     `http://localhost:5000/blogs/${id}`,\n//                     formValue\n//                   );\n//                   if (response.status === 200) {\n//                     toast.success(\"Blog Updated Successfully\");\n//                   } else {\n//                     toast.error(\"Something went wrong\");\n//                   }\n//             }\n         \n    \n//           setFormValue({ authorname: \"\", title: \"\", description: \"\", likes: \"\", comments: \"\", category: \"\", imageUrl: \"\" });\n//           navigate(\"/\");\n//         }\n//       };\n//     const onInputChange = (e) => {\n//         let { name, value } = e.target;\n//         setFormValue({ ...formValue, [name]: value });\n//     };\n//     const onUploadImage = (file) => {\n//         const formData = new FormData();\n//         formData.append(\"file\", file);\n//         formData.append(\"upload_preset\", \"xqvmv0yi\");\n//         axios\n//         .post(\"http://api.cloudinary.com/v1_1/ddy1g5aim/image/upload\", formData)\n//         .then((resp) => {\n//           toast.info(\"Image Uploaded Successfully\");\n//           setFormValue({ ...formValue, imageUrl: resp.data.url });\n//         })\n//         .catch((err) => {\n//           toast.error(\"Something went wrong\");\n//         });\n//     };\n//     const onCategoryChange = (e) => {\n//         setCategoryErrMsg(null);\n//         setFormValue({ ...formValue, category: e.target.value });\n//       };\n\n//   return (\n//     // <div style={{ marginTop: \"100px\" }}>\n//     //   {/* <MDBContainer>\n//     //     <MDBTypography note noteColor=\"primary\">\n//     //       It is blogging website where you will find blog post related to\n//     //       different category like Travel, Food, Sports Fitness, Tech and Fashion\n//     //     </MDBTypography>\n//     //   </MDBContainer> */}\n//     //   <h2>Add Edit</h2>\n//     // </div>\n//     <MDBValidation className= \"row g-3\" style = {{marginTop: '100px'}} noValidate onSubmit={handleSubmit}>\n//          <p className=\"fs-2 fw-bold\">{editMode ? \"Update Blog\" : \"Add Blog\"}</p>\n//         <div\n//         style={{\n//           margin: \"auto\",\n//           padding: \"15px\",\n//           maxWidth: \"400px\",\n//           alignContent: \"center\",\n//         }}\n//       >\n//                   <MDBInput\n//           value={authorname || \"\"}\n//           name=\"authorname\"\n//           type=\"text\"\n//           onChange={onInputChange}\n//           required\n//           label=\"Author Name\"\n//           validation=\"Please provide an Author Name\"\n//           invalid\n//         />\n//         <br/>\n//            <MDBInput\n//           value={title || \"\"}\n//           name=\"title\"\n//           type=\"text\"\n//           onChange={onInputChange}\n//           required\n//           label=\"Title\"\n//           validation=\"Please provide a title\"\n//           invalid\n//         />\n//         <br/>\n//           <MDBInput\n//           value={likes || \"\"}\n//           name=\"likes\"\n//           type=\"text\"\n//           onChange={onInputChange}\n//           required\n//           label=\"Number of Likes\"\n//           validation=\"Please Enter the number of likes\"\n//           invalid\n//         />\n//         <br/>\n//          <MDBInput\n//           value={comments || \"\"}\n//           name=\"comments\"\n//           type=\"text\"\n//           onChange={onInputChange}\n//           required\n//           label=\"Comments\"\n//           validation=\"Please Enter the number of comments recieved\"\n//           invalid\n//         />\n//          <br />\n//          <MDBInput\n//           value={description || \"\"}\n//           name=\"description\"\n//           type=\"text\"\n//           onChange={onInputChange}\n//           required\n//           label=\"Description\"\n//           validation=\"Please provide a description\"\n//           textarea\n//           rows={4}\n//           invalid\n//         />\n//         <br />\n//         {!editMode && (\n//           <>\n//             <MDBInput\n//               type=\"file\"\n//               onChange={(e) => onUploadImage(e.target.files[0])}\n//               required\n//               validation=\"Please provide a title\"\n//               invalid\n//             />\n//             <br />\n//           </>\n//         )}\n//              <select\n//           className=\"categoryDropdown\"\n//           onChange={onCategoryChange}\n//           value={category}\n//         >\n//           <option>Please select category</option>\n//           {options.map((option, index) => (\n//             <option value={option || \"\"} key={index}>\n//               {option}\n//             </option>\n//           ))}\n//         </select>\n//         {categoryErrMsg && (\n//           <div className=\"categoryErrorMsg\">{categoryErrMsg}</div>\n//         )}\n//         <br />\n//         <br />\n//         <MDBBtn type=\"submit\" style={{ marginRight: \"10px\" }}>\n//           {editMode ? \"Update\" : \"Add\"}\n//         </MDBBtn>\n//         <MDBBtn\n//           color=\"danger\"\n//           style={{ marginRight: \"10px\" }}\n//           onClick={() => navigate(\"/\")}\n//         >\n//           Go Back\n//         </MDBBtn>\n//       </div>\n//         </MDBValidation>\n//   );\n// };\n\n// export default AddEditBlog;\nimport React, { useState } from \"react\";\nimport { MDBValidation, MDBInput, MDBBtn } from \"mdb-react-ui-kit\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useEffect } from \"react/cjs/react.development\";\n\n// jnecgtem\n\nconst initialState = {\n  title: \"\",\n  description: \"\",\n  category: \"\",\n  imageUrl: \"\",\n};\n\nconst options = [\"Travel\", \"Fashion\", \"Fitness\", \"Sports\", \"Food\", \"Tech\"];\n\nconst AddEditBlog = () => {\n  const [formValue, setFormValue] = useState(initialState);\n  const [categoryErrMsg, setCategoryErrMsg] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const { title, description, category, imageUrl } = formValue;\n\n  const navigate = useNavigate();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      setEditMode(true);\n      getSingleBlog(id);\n    } else {\n      setEditMode(false);\n      setFormValue({ ...initialState });\n    }\n  }, [id]);\n\n  const getSingleBlog = async (id) => {\n    const singleBlog = await axios.get(`http://localhost:5000/blogs/${id}`);\n    if (singleBlog.status === 200) {\n      setFormValue({ ...singleBlog.data });\n    } else {\n      toast.error(\"Something went wrong\");\n    }\n  };\n\n  const getDate = () => {\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, \"0\");\n    let mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + \"/\" + dd + \"/\" + yyyy;\n    return today;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!category) {\n      setCategoryErrMsg(\"Please select a category\");\n    }\n    const imageValidation = !editMode ? imageUrl : true;\n    if (title && description && imageUrl && category) {\n      const currentDate = getDate();\n      if (!editMode) {\n        const updatedBlogData = { ...formValue, date: currentDate };\n        const response = await axios.post(\n          \"http://localhost:5000/blogs\",\n          updatedBlogData\n        );\n        if (response.status === 201) {\n          toast.success(\"Blog Created Successfully\");\n        } else {\n          toast.error(\"Something went wrong\");\n        }\n      } else {\n        const response = await axios.put(\n          `http://localhost:5000/blogs/${id}`,\n          formValue\n        );\n        if (response.status === 200) {\n          toast.success(\"Blog Updated Successfully\");\n        } else {\n          toast.error(\"Something went wrong\");\n        }\n      }\n\n      setFormValue({ title: \"\", description: \"\", category: \"\", imageUrl: \"\" });\n      navigate(\"/\");\n    }\n  };\n\n  const onInputChange = (e) => {\n    let { name, value } = e.target;\n    setFormValue({ ...formValue, [name]: value });\n  };\n\n  const onUploadImage = (file) => {\n    console.log(\"file\", file);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"upload_preset\", \"jnecgtem\");\n    axios\n      .post(\"http://api.cloudinary.com/v1_1/db9eaq2ct/image/upload\", formData)\n      .then((resp) => {\n        toast.info(\"Image Uploaded Successfully\");\n        setFormValue({ ...formValue, imageUrl: resp.data.url });\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n      });\n  };\n\n  const onCategoryChange = (e) => {\n    setCategoryErrMsg(null);\n    setFormValue({ ...formValue, category: e.target.value });\n  };\n  return (\n    <MDBValidation\n      className=\"row g-3\"\n      style={{ marginTop: \"100px\" }}\n      noValidate\n      onSubmit={handleSubmit}\n    >\n      <p className=\"fs-2 fw-bold\">{editMode ? \"Update Blog\" : \"Add Blog\"}</p>\n      <div\n        style={{\n          margin: \"auto\",\n          padding: \"15px\",\n          maxWidth: \"400px\",\n          alignContent: \"center\",\n        }}\n      >\n        <MDBInput\n          value={title || \"\"}\n          name=\"title\"\n          type=\"text\"\n          onChange={onInputChange}\n          required\n          label=\"Title\"\n          validation=\"Please provide a title\"\n          invalid\n        />\n        <br />\n        <MDBInput\n          value={description || \"\"}\n          name=\"description\"\n          type=\"text\"\n          onChange={onInputChange}\n          required\n          label=\"Description\"\n          validation=\"Please provide a description\"\n          textarea\n          rows={4}\n          invalid\n        />\n        <br />\n        {!editMode && (\n          <>\n            <MDBInput\n              type=\"file\"\n              onChange={(e) => onUploadImage(e.target.files[0])}\n              required\n              validation=\"Please provide a title\"\n              invalid\n            />\n            <br />\n          </>\n        )}\n\n        <select\n          className=\"categoryDropdown\"\n          onChange={onCategoryChange}\n          value={category}\n        >\n          <option>Please select category</option>\n          {options.map((option, index) => (\n            <option value={option || \"\"} key={index}>\n              {option}\n            </option>\n          ))}\n        </select>\n        {categoryErrMsg && (\n          <div className=\"categoryErrorMsg\">{categoryErrMsg}</div>\n        )}\n        <br />\n        <br />\n        <MDBBtn type=\"submit\" style={{ marginRight: \"10px\" }}>\n          {editMode ? \"Update\" : \"Add\"}\n        </MDBBtn>\n        <MDBBtn\n          color=\"danger\"\n          style={{ marginRight: \"10px\" }}\n          onClick={() => navigate(\"/\")}\n        >\n          Go Back\n        </MDBBtn>\n      </div>\n    </MDBValidation>\n  );\n};\n\nexport default AddEditBlog;"]},"metadata":{},"sourceType":"module"}